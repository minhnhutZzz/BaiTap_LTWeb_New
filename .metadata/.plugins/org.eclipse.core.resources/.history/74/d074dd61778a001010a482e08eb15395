package vn.iotstar.controllers.admin;

import java.io.IOException;

import java.util.List;
import java.util.Locale.Category;

import javax.inject.Inject;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import vn.iotstar.services.CategoryService;
import vn.iotstar.services.impl.CategoryServiceImpl;
@MultipartConfig
@WebServlet(urlPatterns = { "/admin-category", "/admin-category/create", "/admin-category/update", "/admin-category/edit", "/admin-category/delete", "/admin-category/reset" })
public class CategoryController extends HttpServlet {
    private static final long serialVersionUID = 1L;

    @Inject
    private CategoryService categoryService;

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // kiểm tra url rồi chuyển đến hàm tương ứng
        // lấy url
    	String url = request.getRequestURL().toString();
    	Category category = null;

    	if (url.contains("create")) {
    	    request.getRequestDispatcher("/views/admin/cate/add.jsp").forward(request, response);
    	} else if (url.contains("delete")) {
    	    delete(request, response);
    	    category = new Category();
    	    request.setAttribute("category", category);
    	} else if (url.contains("edit")) {
    	    edit(request, response);
    	} else if (url.contains("reset")) {
    	    category = new Category();
    	    request.setAttribute("category", category);
    	}

    	// gọi hàm findAll để lấy thông tin từ entity
    	findAll(request, response);
    	request.setAttribute("tag", "cate");
    	request.getRequestDispatcher("/views/admin/cate/list.jsp").forward(request, response);

    }
    
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // lấy url
        String url = request.getRequestURL().toString();

        // kiểm tra url rồi chuyển đến hàm tương ứng
        if (url.contains("create")) {
            insert(request, response);
        } else if (url.contains("update")) {
            update(request, response);
        } else if (url.contains("delete")) {
            delete(request, response);
        } else if (url.contains("reset")) {
            request.setAttribute("category", new Category());
        }

        // gọi hàm findAll để lấy thông tin từ entity
        findAll(request, response);
        request.getRequestDispatcher("/views/admin/cate/list.jsp").forward(request, response);
    }
    
    protected void insert(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            request.setCharacterEncoding("UTF-8");
            response.setCharacterEncoding("UTF-8");

            // khởi tạo đối tượng Model
            Category category = new Category();

            // sử dụng BeanUtils để lấy các field trên form
            // tên field phải trùng với entity
            BeanUtils.populate(category, request.getParameterMap());

            // xử lý hình ảnh
            String filename = category.getCategorycode() + System.currentTimeMillis();
            category.setImages(UploadUtils.processUpload("images", request, Constant.DIR + "\\category\\", fileName));

            // gọi hàm insert để thêm dữ liệu
            // category.setStatus(true);
            categoryService.insert(category);

            // thông báo
            request.setAttribute("message", "Đã thêm thành công");

        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "Error: " + e.getMessage());
        }
    }

    


}
